# Floating point data format invariants

const SIGN_BIT = 0x80000000
const UNO = UInt32(1)

# VAX floating point data formats (see VAX Architecture Reference Manual)

const VAX_F_SIGN_BIT      = SIGN_BIT
const VAX_F_EXPONENT_MASK = 0x7F800000
const VAX_F_EXPONENT_SIZE = UInt32(8)
const VAX_F_EXPONENT_BIAS = UInt32(128)
const VAX_F_MANTISSA_MASK = 0x007FFFFF
const VAX_F_MANTISSA_SIZE = UInt32(23)
const VAX_F_HIDDEN_BIT    = ( UNO << VAX_F_MANTISSA_SIZE )

const VAX_D_SIGN_BIT      = SIGN_BIT
const VAX_D_EXPONENT_MASK = VAX_F_EXPONENT_MASK
const VAX_D_EXPONENT_SIZE = VAX_F_EXPONENT_SIZE
const VAX_D_EXPONENT_BIAS = VAX_F_EXPONENT_BIAS
const VAX_D_MANTISSA_MASK = VAX_F_MANTISSA_MASK
const VAX_D_MANTISSA_SIZE = VAX_F_MANTISSA_SIZE
const VAX_D_HIDDEN_BIT    = VAX_F_HIDDEN_BIT

const VAX_G_SIGN_BIT      = SIGN_BIT
const VAX_G_EXPONENT_MASK = 0x7FF00000
const VAX_G_EXPONENT_SIZE = UInt32(11)
const VAX_G_EXPONENT_BIAS = UInt32(1024)
const VAX_G_MANTISSA_MASK = 0x000FFFFF
const VAX_G_MANTISSA_SIZE = UInt32(20)
const VAX_G_HIDDEN_BIT    = ( UNO << VAX_G_MANTISSA_SIZE )

const VAX_H_SIGN_BIT      = SIGN_BIT
const VAX_H_EXPONENT_MASK = 0x7FFF0000
const VAX_H_EXPONENT_SIZE = UInt32(15)
const VAX_H_EXPONENT_BIAS = UInt32(16384)
const VAX_H_MANTISSA_MASK = 0x0000FFFF
const VAX_H_MANTISSA_SIZE = UInt32(16)
const VAX_H_HIDDEN_BIT    = ( UNO << VAX_H_MANTISSA_SIZE )

# IEEE floating point data formats (see Alpha Architecture Reference Manual)

const IEEE_S_SIGN_BIT      = SIGN_BIT
const IEEE_S_EXPONENT_MASK = 0x7F800000
const IEEE_S_EXPONENT_SIZE = UInt32(8)
const IEEE_S_EXPONENT_BIAS = UInt32(127)
const IEEE_S_MANTISSA_MASK = 0x007FFFFF
const IEEE_S_MANTISSA_SIZE = UInt32(23)
const IEEE_S_HIDDEN_BIT    = ( UNO << IEEE_S_MANTISSA_SIZE )

const IEEE_T_SIGN_BIT      = SIGN_BIT
const IEEE_T_EXPONENT_MASK = 0x7FF00000
const IEEE_T_EXPONENT_SIZE = UInt32(11)
const IEEE_T_EXPONENT_BIAS = UInt32(1023)
const IEEE_T_MANTISSA_MASK = 0x000FFFFF
const IEEE_T_MANTISSA_SIZE = UInt32(20)
const IEEE_T_HIDDEN_BIT    = ( UNO << IEEE_T_MANTISSA_SIZE )

const IEEE_X_SIGN_BIT      = SIGN_BIT
const IEEE_X_EXPONENT_MASK = 0x7FFF0000
const IEEE_X_EXPONENT_SIZE = UInt32(15)
const IEEE_X_EXPONENT_BIAS = UInt32(16383)
const IEEE_X_MANTISSA_MASK = 0x0000FFFF
const IEEE_X_MANTISSA_SIZE = UInt32(16)
const IEEE_X_HIDDEN_BIT    = ( UNO << IEEE_X_MANTISSA_SIZE )
